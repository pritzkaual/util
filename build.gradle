description 'C++ project of util'

task deliverUtil(type: Copy) {
	group 'util'
	description 'deliver util header to %MDE4CPP_HOME%/application/include/util'
	from "src/util"
	into System.getenv('MDE4CPP_HOME')+"/application/include/util"
	include "**/*.hpp"
	include "**/*.h"
	include "**/*.cpp"
	exclude "build", ".gradle"
	inputs.dir file("src/util")
	outputs.dir file(System.getenv('MDE4CPP_HOME')+"/application/include/util")
}

task deliverPersistence(type: Copy) {
  group 'Persistence'
	description 'deliver persistence header to %MDE4CPP_HOME%/application/include/persistence'
	from ("src/persistence/interface") {
    include "*.hpp"
    include "*.h"
    include "*.cpp"
  }
  from ("src/persistence/src") {
    include "Persistence.hpp"
    include "Option.hpp"
  }
	exclude "build", ".gradle"
	into System.getenv('MDE4CPP_HOME')+"/application/include/persistence"
  inputs.dir file("src/persistence")
	outputs.dir file(System.getenv('MDE4CPP_HOME')+"/application/include/persistence")
}

task compilePersistence(dependsOn: ['compilePersistenceDebug', 'compilePersistenceRelease']) {
	group 'Persistence'
	description 'compile Persistence in debug and release'
}

task compilePersistenceDebug {
	group 'Persistence'
	description 'compile Persistence in Debug'

	def folder = new File(file('./src/persistence/.cmake/Debug').absolutePath)
	if( !folder.exists() ) {
		folder.mkdirs()
	}

	doLast {
		exec {
			workingDir 'src/persistence/.cmake/Debug'
			commandLine 'cmd', '/c', 'cmake -G "MinGW Makefiles" -D CMAKE_BUILD_TYPE=Debug ' + file("./src/persistence").absolutePath
		}
		exec {
			workingDir 'src/persistence/.cmake/Debug'
			if (make_parallel_jobs)
			{			
				commandLine 'cmd', '/c', 'mingw32-make install -j' + make_parallel_jobs
			}
			else
			{
				commandLine 'cmd', '/c', 'mingw32-make install' 
			}
		}
	}
}

task compilePersistenceRelease {
	group 'Persistence'
	description 'compile Persistence in Release'

	def folder = new File(file('./src/persistence/.cmake/Release').absolutePath)
	if( !folder.exists() ) {
		folder.mkdirs()
	}

	doLast {
		exec {
			workingDir 'src/persistence/.cmake/Release'
			commandLine 'cmd', '/c', 'cmake -G "MinGW Makefiles" -D CMAKE_BUILD_TYPE=Release ' + file("./src/persistence").absolutePath
		}
		exec {
			workingDir 'src/persistence/.cmake/Release'
			if (make_parallel_jobs)
			{			
				commandLine 'cmd', '/c', 'mingw32-make install -j' + make_parallel_jobs
			}
			else
			{
				commandLine 'cmd', '/c', 'mingw32-make install' 
			}
		}
	}
}


