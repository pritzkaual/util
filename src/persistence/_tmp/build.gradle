description 'Example project: test_boost_XMLLoad of Ecore use '

task compilePersistence(dependsOn: ['compilePersistenceDebug', 'compilePersistenceRelease']) {
	group 'Examples'
	description 'compile test_boost_XMLLoad in debug and release'
}
task compilePersistenceDebug {
	group 'Examples'
	description 'compile test_boost_XMLLoad in Debug'

	def folder = new File(file('./test_boost_XMLLoad/.cmake/Debug').absolutePath)
	if( !folder.exists() ) {
		folder.mkdirs()
	}

	doLast {
		exec {
			workingDir 'test_boost_XMLLoad/.cmake/Debug'
			commandLine 'cmd', '/c', 'cmake -G "MinGW Makefiles" -D CMAKE_BUILD_TYPE=Debug ' + file("./test_boost_XMLLoad/src").absolutePath
		}
		exec {
			workingDir 'test_boost_XMLLoad/.cmake/Debug'
			if (make_parallel_jobs)
			{			
				commandLine 'cmd', '/c', 'mingw32-make install -j' + make_parallel_jobs
			}
			else
			{
				commandLine 'cmd', '/c', 'mingw32-make install' 
			}
		}
	}
}
task compilePersistenceRelease {
	group 'Examples'
	description 'compile test_boost_XMLLoad in Release'

	def folder = new File(file('./test_boost_XMLLoad/.cmake/Release').absolutePath)
	if( !folder.exists() ) {
		folder.mkdirs()
	}

	doLast {
		exec {
			workingDir 'test_boost_XMLLoad/.cmake/Release'
			commandLine 'cmd', '/c', 'cmake -G "MinGW Makefiles" -D CMAKE_BUILD_TYPE=Release ' + file("./test_boost_XMLLoad/src").absolutePath
		}
		exec {
			workingDir 'test_boost_XMLLoad/.cmake/Release'
			if (make_parallel_jobs)
			{			
				commandLine 'cmd', '/c', 'mingw32-make install -j' + make_parallel_jobs
			}
			else
			{
				commandLine 'cmd', '/c', 'mingw32-make install' 
			}
		}
	}
}

task deliverPersistenceHeader(type: Copy) {
	description 'deliver Persistence Header to %MDE4CPP_HOME%/application/include/persistence'
	from "test_boost_XMLLoad/src/persistence"
	into System.getenv('MDE4CPP_HOME')+"/application/include/persistence"
	include "XHandler.hpp"
	exclude "build", ".gradle"
}

